pi = 3.1415926535898
#阶乘
def fuc(num):
    if num == 1:
        return num
    else:
        y=1
        for i in range(1,num+1):
          y *= i
        return y
#一个数的几次幂
def expo(num,time):
    if time == 1:
        return num
    else:
        y =num
        for i in range(1,time):
           num *= y
        return num
#加减乘除
dev = lambda fri,sec : fri / sec
plus = lambda fri,sec : fri + sec
min = lambda fri,sec : fri - sec
mut = lambda fri,sec : fri * sec

#算余数
r_dev = lambda fri,sec : fri % sec
#算整数部分
o_dev = lambda fri,sec : fri // sec
#算小数部分
p_dev = lambda fri,sec : fri / sec - fri // sec
#连加
def m_plus(num):
    if num == 1:
       return 1
    else:
        x  = num
        for i in range(num-1):
            num += (x - 1)
            x -= 1
        return num

#分解质因数
def dec(num):
    dec = []
    x = 3
    while num % 2 == 0:
        dec.append(2)
        num /= 2
    while num >= x:
       while num % x == 0:
           dec.append(x)
           num /= x
       x += 2
    return dec

#三角函数 sin   
def sin(angle):
    angle = angle % pi
    list1 = dev(expo(angle,1),fuc(1))
    list2 = dev(expo(angle,3),fuc(3))
    list3 = dev(expo(angle,5),fuc(5))
    list4 = dev(expo(angle,7),fuc(7))
    list5 = dev(expo(angle,9),fuc(9))
    list6 = dev(expo(angle,11),fuc(11))
    list7 = dev(expo(angle,13),fuc(13))
    list8 = dev(expo(angle,15),fuc(15))
    plus = list1 + list3 + list5 + list7
    minus = list2 + list4 + list6 + list8
    return plus - minus
    
    
def cos(angle):
    angle = angle % pi
    list1 = dev(expo(angle,2),fuc(2))
    list2 = dev(expo(angle,4),fuc(4))
    list3 = dev(expo(angle,6),fuc(6))
    list4 = dev(expo(angle,8),fuc(8))
    list5 = dev(expo(angle,10),fuc(10))
    list6 = dev(expo(angle,12),fuc(12))
    list7 = dev(expo(angle,14),fuc(14))
    list8 = dev(expo(angle,16),fuc(16))
    plus = list1 + list3 + list5 + list7
    minus = list2 + list4 + list6 + list8
    x = 1 - plus + minus
    return x - x - x
     
def tan(angle):
    x = (sin(angle) / cos(angle))
    return x - x - x
